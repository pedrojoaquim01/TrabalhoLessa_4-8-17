<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAZAAAAGQCAYAAACAvzbMAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAABcTSURBVHhe7dVBjuw6DgXRt+te/m/nPAZFEbgEwThAeJhQypT17z9Jkh54gUiSnniBSJKeeIFI
        kp54gUiSnniBSJKeeIFIkp54gUiSnniBSJKeeIFIkp54gUiSnniBSJKeeIFIkp54gUiSnniBSJKeeIFI
        kp54gUiSnniBSJKeeIFIkp54gUiSnniBSJKeeIFIkp54gUiSnniBSJKeeIFIkp54gUiSnniBSJKeeIFI
        kp54gUiSnniBSJKeeIFIkp54gUiSnniBSJKeeIFIkp54gUiSnniBSJKeeIFIkp54gUiSnniBSJKeeIFI
        kp54gUiSnniBSJKeeIFIkp54gUiSnniBSJKeeIFIkp54gUiSnniBSJKeeIFIkp54gUiSnniBSJKeeIFI
        kp54gUiSnniBSJKeeIFIkp54gUiSnniBSJKeeIFIkp54gUiSnniBSJKeeIFIkp54gUiSnniBSJKeeIFI
        kp54gajl379/Npg0yQlUC33ULJc0yQlUC33ULJc0yQlUC33ULJc0yQlUC33ULJc0yQlUC33ULJc0yQlU
        C33ULJc0yQlUC33ULJc0yQlUC33ULJc0yQlUC33ULJc0yQlUC33ULJc0yQlUC33ULJc0yQlUC33ULJc0
        yQlUC33ULJc0yQlUC33ULJc0yQlUC33ULJc0yQlcjj4qm/oevf43HK2pEO3JpnSbE7AcHepNfY9e9FFP
        RmsqRHuyKd3mBCxHh3pT36MXfdST0ZoK0Z5sSrc5AcvRod7U9+hFH/VktKZCtCeb0m1OwHJ0qDf1PXrR
        Rz0ZrakQ7cmmdJsTsBwd6k19j170UU9GaypEe7Ip3eYELEeHelPfoxd91JPRmgrRnmxKtzkBy9Gh3tT3
        6EUf9WS0pkK0J5vSbU7AcnSoN/U9etFHPRmtqRDtyaZ0mxOwHB3qTX2PXvRRT0ZrKkR7sind5gQsR4d6
        U9+jF33Uk9GaCtGebEq3OQHL0aHe1PfoRR/1ZLSmQrQnm9JtTsBydKg39T160Uc9Ga2pEO3JpnSbE7Ac
        HepNfY9e9FFPRmsqRHuyKd3mBCxHh3pT36MXfdST0ZoK0Z5sSrc5AcvRod7U9+hFH/VktKZCtCeb0m1O
        wDA6lMm+x+7oo56M1rQomolk2s03OIwOVbLvsTv6qCejNS2KZiKZdvMNDqNDlex77I4+6sloTYuimUim
        3XyDw+hQJfseu6OPejJa06JoJpJpN9/gMDpUyb7H7uijnozWtCiaiWTazTc4jA5Vsu+xO/qoJ6M1LYpm
        Ipl28w0Oo0OV7Hvsjj7qyWhNi6KZSKbdfIPD6FAl+x67o496MlrTomgmkmk33+AwOlTJvsfu6KOejNa0
        KJqJZNrNNziMDlWy77E7+qgnozUtimYimXbzDQ6jQ5Xse+yOPurJaE2LoplIpt18g8PoUCX7Hrujj3oy
        WtOiaCaSaTff4DA6VMm+x+7oo56M1rQomolk2s03OIwOVbLvsTv6qCejNS2KZiKZdvMNDqNDlex77I4+
        6sloTYuimUim3XyDw+hQJfseu6OPejJa06JoJpJpN99gEx2KZPhRq/T7jcloTZeiPUlGaypEM5lMs3wD
        TTTUyehQl/r9xmS0pkvRniSjNRWimUymWb6BJhrqZHSoS/1+YzJa06VoT5LRmgrRTCbTLN9AEw11MjrU
        pX6/MRmt6VK0J8loTYVoJpNplm+giYY6GR3qUr/fmIzWdCnak2S0pkI0k8k0yzfQREOdjA51qd9vTEZr
        uhTtSTJaUyGayWSa5RtooqFORoe61O83JqM1XYr2JBmtqRDNZDLN8g000VAno0Nd6vcbk9GaLkV7kozW
        VIhmMplm+QaaaKiT0aEu9fuNyWhNl6I9SUZrKkQzmUyzfANNNNTJ6FCX+v3GZLSmS9GeJKM1FaKZTKZZ
        voEmGupkdKhL/X5jMlrTpWhPktGaCtFMJtMs30ATDXUyOtSlfr8xGa3pUrQnyWhNhWgmk2mWb6CJhjoZ
        HepSv9+YjNZ0KdqTZLSmQjSTyTTLN9BEQ52MDnWp329MRmu6FO1JMlpTIZrJZJrlG2iioU5Gh7rU7zcm
        ozVdivYkGa2pEM1kMs3yDTTRUCejQ13q9xuT0ZouRXuSjNZUiGYymWb5BppoqCt9j15wqM1i0UwWojNR
        SbN8A0001JW+Ry861GapaCYL0ZmopFm+gSYa6krfoxcdarNUNJOF6ExU0izfQBMNdaXv0YsOtVkqmslC
        dCYqaZZvoImGutL36EWH2iwVzWQhOhOVNMs30ERDXel79KJDbZaKZrIQnYlKmuUbaKKhrvQ9etGhNktF
        M1mIzkQlzfINNNFQV/oevehQm6WimSxEZ6KSZvkGmmioK32PXnSozVLRTBaiM1FJs3wDTTTUlb5HLzrU
        ZqloJgvRmaikWb6BJhrqSt+jFx1qs1Q0k4XoTFTSLN9AEw11pe/Riw61WSqayUJ0Jipplm+giYa60vfo
        RYfaLBXNZCE6E5U0yzfQRENd6Xv0okNtlopmshCdiUqa5RtooqGu9D160aE2S0UzWYjORCXN8g000VBX
        +h696FCbpaKZLERnopJmnX8DNJTJvsds9FFIRmu6FO1JMlpTMDoTydRzfgdpqJJ9j9noo5KM1nQp2pNk
        tKZgdCaSqef8DtJQJfses9FHJRmt6VK0J8loTcHoTCRTz/kdpKFK9j1mo49KMlrTpWhPktGagtGZSKae
        8ztIQ5Xse8xGH5VktKZL0Z4kozUFozORTD3nd5CGKtn3mI0+KsloTZeiPUlGawpGZyKZes7vIA1Vsu8x
        G31UktGaLkV7kozWFIzORDL1nN9BGqpk32M2+qgkozVdivYkGa0pGJ2JZOo5v4M0VMm+x2z0UUlGa7oU
        7UkyWlMwOhPJ1HN+B2mokn2P2eijkozWdCnak2S0pmB0JpKp5/wO0lAl+x6z0UclGa3pUrQnyWhNwehM
        JFPP+R2koUr2PWajj0oyWtOlaE+S0ZqC0ZlIpp7zO0hDlex7zEYflWS0pkvRniSjNQWjM5FMPed3kIYq
        2feYjT4qyWhNl6I9SUZrCkZnIpl6zu8gDVWy7zEbfVSS0ZouRXuSjNYUjM5EMvWc30EaqmTfYzb6qCSj
        NV2K9iQZrSkYnYlk6jm/gzRUlb7H7uijUol+03LRO6lEv7koOpOV1HN+B2moKn2P3dFHpRL9puWid1KJ
        fnNRdCYrqef8DtJQVfoeu6OPSiX6TctF76QS/eai6ExWUs/5HaShqvQ9dkcflUr0m5aL3kkl+s1F0Zms
        pJ7zO0hDVel77I4+KpXoNy0XvZNK9JuLojNZST3nd5CGqtL32B19VCrRb1oueieV6DcXRWeyknrO7yAN
        VaXvsTv6qFSi37Rc9E4q0W8uis5kJfWc30EaqkrfY3f0UalEv2m56J1Uot9cFJ3JSuo5v4M0VJW+x+7o
        o1KJftNy0TupRL+5KDqTldRzfgdpqCp9j93RR6US/ablondSiX5zUXQmK6nn/A7SUFX6Hrujj0ol+k3L
        Re+kEv3mouhMVlLP+R2koar0PXZHH5VK9JuWi95JJfrNRdGZrKSe8ztIQ1Xpe+yOPiqV6DctF72TSvSb
        i6IzWUk953eQhqrS99gdfVQq0W9aLnonleg3F0VnspJ6zu8gDVWl77E7+qhUot+0XPROKtFvLorOZCX1
        nN9BGqpK32N39FGpRL9pueidVKLfXBSdyUrqOb+DNFSVvsfu6KNSiX7TctE7qUS/uSg6k5XUc34Haagq
        fY/d0UelEv2m5aJ3Uol+c1F0Jiup5/wO0lBV+h67o49KJfpNy0XvpBL95qLoTFZSz/kdpKGq9D12Rx+V
        SvSbloveSSX6zUXRmayknvM7SENV6Xvsjj4qleg3LRe9k0r0m4uiM1lJPed3kIaq0vfYHX1UKtFvWi56
        J5XoNxdFZ7KSes7vIA1Vpe+xO/qoVKLftFz0TirRby6KzmQl9ZzfQRqqSt9jd/RRqUS/abnonVSi31wU
        nclK6jm/gzRUlb7H7uijUol+03LRO6lEv7koOpOV1HN+B2moKn2P3dFHpRL9puWid1KJfnNRdCYrqef8
        DtJQVfoeu6OPSiX6TctF76QS/eai6ExWUs/5HaShqvQ9dkcflUr0m5aL3kkl+s1F0ZmspJ7zO0hDVel7
        7I4+KpXoNy0XvZNK9JuLojNZST3nd5CGqtL32B19VCrRb1oueieV6DcXRWeyknrO7yANVaXvsTv6qFSi
        37Rc9E4q0W8uis5kJfWc30EaqkrfY3f0UalEv2m56J1Uot9cFJ3JSuo5v4M0VJW+x2z0UUhGa7Jc9E6S
        0ZqC0ZmspJ7zO0hDVel7zEaHOhmtyXLRO0lGawpGZ7KSes7vIA1Vpe8xGx3qZLQmy0XvJBmtKRidyUrq
        Ob+DNFSVvsdsdKiT0ZosF72TZLSmYHQmK6nn/A7SUFX6HrPRoU5Ga7Jc9E6S0ZqC0ZmspJ7zO0hDVel7
        zEaHOhmtyXLRO0lGawpGZ7KSes7vIA1Vpe8xGx3qZLQmy0XvJBmtKRidyUrqOb+DNFSVvsdsdKiT0Zos
        F72TZLSmYHQmK6nn/A7SUFX6HrPRoU5Ga7Jc9E6S0ZqC0ZmspJ7zO0hDVel7zEaHOhmtyXLRO0lGawpG
        Z7KSes7vIA1Vpe8xGx3qZLQmy0XvJBmtKRidyUrqOb+DNFSVvsdsdKiT0ZosF72TZLSmYHQmK6nn/A7S
        UFX6HrPRoU5Ga7Jc9E6S0ZqC0ZmspJ7zO0hDVel7zEaHOhmtyXLRO0lGawpGZ7KSes7vIA1Vpe8xGx3q
        ZLQmy0XvJBmtKRidyUrqOb+DNFSVvsdsdKiT0ZosF72TZLSmYHQmK6nn/A7SUFXCQ2V/77eHl6M9sT9H
        Z7KSes7vIA1VJRpqK/Tbw8vRntifozNZST3nd5CGqhINtRX67eHlaE/sz9GZrKSe8ztIQ1WJhtoK/fbw
        crQn9ufoTFZSz/kdpKGqRENthX57eDnaE/tzdCYrqef8DtJQVaKhtkK/Pbwc7Yn9OTqTldRzfgdpqCrR
        UFuh3x5ejvbE/hydyUrqOb+DNFSVaKit0G8PL0d7Yn+OzmQl9ZzfQRqqSjTUVui3h5ejPbE/R2eyknrO
        7yANVSUaaiv028PL0Z7Yn6MzWUk953eQhqoSDbUV+u3h5WhP7M/RmayknvM7SENViYbaCv328HK0J/bn
        6ExWUs/5HaShqkRDbYV+e3g52hP7c3QmK6nn/A7SUFWiobZCvz28HO2J/Tk6k5XUc34Haagq0VBbod8e
        Xo72xP4cnclK6jm/gzRUlWiordBvDy9He2J/js5kJfWc30Eaqko01MloTWapaCaT0Zoqqef8DtJQVaKh
        TkZrMktFM5mM1lRJPed3kIaqEg11MlqTWSqayWS0pkrqOb+DNFSVaKiT0ZrMUtFMJqM1VVLP+R2koapE
        Q52M1mSWimYyGa2pknrO7yANVSUa6mS0JrNUNJPJaE2V1HN+B2moKtFQJ6M1maWimUxGa6qknvM7SENV
        iYY6Ga3JLBXNZDJaUyX1nN9BGqpKNNTJaE1mqWgmk9GaKqnn/A7SUFWioU5GazJLRTOZjNZUST3nd5CG
        qhINdTJak1kqmslktKZK6jm/gzRUlWiok9GazFLRTCajNVVSz/kdpKGqREOdjNZklopmMhmtqZJ6zu8g
        DVUlGupktCazVDSTyWhNldRzfgdpqCrRUCejNZmloplMRmuqpJ7zO0hDVYmGOhmtySwVzWQyWlMl9Zzf
        QRqqS02jNVWaRmuqNI3WdCn1eIHAUF1qGq2p0jRaU6VptKZLqccLBIbqUtNoTZWm0ZoqTaM1XUo9XiAw
        VJeaRmuqNI3WVGkarelS6vECgaG61DRaU6VptKZK02hNl1KPFwgM1aWm0ZoqTaM1VZpGa7qUerxAYKgu
        NY3WVGkaranSNFrTpdTjBQJDdalptKZK02hNlabRmi6lHi8QGKpLTaM1VZpGa6o0jdZ0KfV4gcBQXWoa
        ranSNFpTpWm0pkupxwsEhupS02hNlabRmipNozVdSj1eIDBUl5pGa6o0jdZUaRqt6VLq8QKBobrUNFpT
        pWm0pkrTaE2XUo8XCAzVpabRmipNozVVmkZrupR6vEBgqC41jdZUaRqtqdI0WtOl1OMFAkN1qWm0pkrT
        aE2VptGaLqUed7CJhjLZdvSfKk2jNVXajv5TMs3yDTTRUCfbjv5TpWm0pkrb0X9Kplm+gSYa6mTb0X+q
        NI3WVGk7+k/JNMs30ERDnWw7+k+VptGaKm1H/ymZZvkGmmiok21H/6nSNFpTpe3oPyXTLN9AEw11su3o
        P1WaRmuqtB39p2Sa5RtooqFOth39p0rTaE2VtqP/lEyzfANNNNTJtqP/VGkaranSdvSfkmmWb6CJhjrZ
        dvSfKk2jNVXajv5TMs3yDTTRUCfbjv5TpWm0pkrb0X9Kplm+gSYa6mTb0X+qNI3WVGk7+k/JNMs30ERD
        nWw7+k+VptGaKm1H/ymZZvkGmmiok21H/6nSNFpTpe3oPyXTLN9AEw11su3oP1WaRmuqtB39p2Sa5Rto
        oqFOth39p0rTaE2VtqP/lEyzfANNNNTJtqP/VGkaranSdvSfkmmWb2AYHYpK0iSayUrazTc4jA5VJWkS
        zWQl7eYbHEaHqpI0iWayknbzDQ6jQ1VJmkQzWUm7+QaH0aGqJE2imayk3XyDw+hQVZIm0UxW0m6+wWF0
        qCpJk2gmK2k33+AwOlSVpEk0k5W0m29wGB2qStIkmslK2s03OIwOVSVpEs1kJe3mGxxGh6qSNIlmspJ2
        8w0Oo0NVSZpEM1lJu/kGh9GhqiRNopmspN18g8PoUFWSJtFMVtJuvsFhdKgqSZNoJitpN9/gMDpUlaRJ
        NJOVtJtvcBgdqmS6jWYimXbzDQ6jQ5VMt9FMJNNuvsFhdKiS6TaaiWTazTc4jA5VMt1GM5FMu/kGh9Gh
        SqbbaCaSaTff4DA6VMl0G81EMu3mGxxGhyqZbqOZSKbdfIPD6FAl0200E8m0m29wGB2qZLqNZiKZdvMN
        DqNDlUy30Uwk026+wWF0qJLpNpqJZNrNNziMDlUy3UYzkUy7+QaH0aFKpttoJpJpN9/gMDpUyXQbzUQy
        7eYbHEaHKpluo5lIpt18g8PoUCXTbTQTybSbb3A5OpRmqXSbE7AcHWqzVLrNCViODrVZKt3mBCxHh9os
        lW5zApajQ22WSrc5AcvRoTZLpducgOXoUJul0m1OwHJ0qM1S6TYnYDk61GapdJsTsBwdarNUus0JWI4O
        tVkq3eYELEeH2iyVbnMClqNDbZZKtzkBy9GhNkul25yA5ehQm6XSbU7AcnSozVLpNidAkvTEC0SS9MQL
        RJL0xAtEkvTEC0SS9MQLRJL0xAtEkvTEC0SS9MQLRJL0xAtEkvTEC0SS9MQLRJL0xAtEkvTEC0SS9MQL
        RJL0xAtEkvTEC0SS9MQLRJL0xAtEkvTEC0SS9MQLRJL0xAtEkvTEC0SS9MQLRJL0xAtEkvTEC0SS9MQL
        RJL0xAtEkvTEC0SS9MQLRJL0xAtEkvTEC0SS9MQLRJL0xAtEkvTEC0SS9MQLRJL0xAtEkvTEC0SS9MQL
        RJL0xAtEkvTEC0SS9MQLRJL0xAtEkvTEC0SS9MQLRJL0xAtEkvTEC0SS9MQLRJL0xAtEkvTEC0SS9MQL
        RJL0xAtEkvTEC0SS9MQLRJL0xAtEkvTEC0SS9MQLRJL0xAtEkvTEC0SS9MQLRJL0xAtEkvTEC0SS9MQL
        RJL0xAtEkvTEC0SS9MQLRJL0xAtEkvTEC0SS9MQLRJL0xAtEkvTEC0SS9MQLRJL0xAtEkvTEC0SS9MQL
        RJL0xAtEkvTEC0SS9MQLRJL0xAtEkvTEC0SS9OC///4PYK/VHmTu0GUAAAAASUVORK5CYII=
</value>
  </data>
</root>